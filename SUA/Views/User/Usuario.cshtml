@model SUA.Models.UserModel
<style>
    table {
        border-spacing: 20px;
    }

    td {
        padding: 10px;
    }
</style>

<div class="main-content">
    @using (Html.BeginForm("Usuario", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        if (ViewBag.mensaje == "creado")
        {
            <label>El usuario ha sido cargado con éxito. Puede verlo cargado en el <a href="@Url.RouteUrl("User")">Listado de usuarios</a></label>
        }
        else if (ViewBag.mensaje == "actualizado")
        {
            <label>El usuario ha sido actualizado con éxito. Puede ver los cambios en el <a href="@Url.RouteUrl("User")">Listado de usuarios</a></label>
        }
        else if (ViewBag.mensaje == "Get")
        {
            <div class="panel">
                <div class="panel-body">
                    <form data-id="" id="pdf-create-form" to-action="/pdfs/create">

                        <table style="border-spacing: 20px">
                            <tr>
                                <td>
                                    <label>Nombre de usuario </label>
                                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control", Style = "width:300px", required = "required" })
                                </td>
                                <td>
                                    <label>Contraseña </label>
                                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control", Style = "width:300px", required = "required" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label>Email</label>
                                    @Html.TextBoxFor(model => model.MailRecover, new { @class = "form-control", Style = "width:300px", required = "required", @type = "email" })
                                </td>
                                <td>
                                    <label>Usuario Maestro</label>
                                    @Html.DropDownListFor(model => model.UserMaster, new SelectList(ViewBag.estados, "Text", "Value"), new { @id="userMaster", @class = "form-control", Style = "width:300px" })
                                </td>
                            </tr>
                         </table>
                        <hr style="color: #8dd9f7">
                        <table>
                            <tr>    
                                <td>
                                    <label>Crear Fechas</label>
                                    @Html.DropDownListFor(model => model.CrearFechas, new SelectList(ViewBag.estados, "Text", "Value"), new { @id = "crearFechas", @class = "form-control", Style = "width:130px" })
                                </td>
                                <td>
                                    <label>Carga Bordereaux</label>
                                    @Html.DropDownListFor(model => model.CargaBordereaux, new SelectList(ViewBag.estados, "Text", "Value"), new { @id = "cargarBordereaux", @class = "form-control", Style = "width:130px" })
                                </td>
                                <td>
                                    <label>Carga Salas</label>
                                    @Html.DropDownListFor(model => model.CargaSalas, new SelectList(ViewBag.estados, "Text", "Value"), new { @id = "cargaSalas", @class = "form-control", Style = "width:130px" })
                                </td>
                                <td>
                                    <label>Ver/Descargar Bordereaux</label>
                                    @Html.DropDownListFor(model => model.VeBordereaux, new SelectList(ViewBag.estados, "Text", "Value"), new { @id = "veBordereaux", @class = "form-control", Style = "width:130px" })
                                </td>
                            </tr>
                        </table>
                        <hr style="color: #8dd9f7">
                        <table>
                            <tr>
                                <td>
                                    <label>Cambiar Contraseña al siguiente login</label>
                                    @Html.DropDownListFor(model => model.MustChangePasswordAtNextLogin, new SelectList(ViewBag.estados, "Text", "Value"), new { @class = "form-control", Style = "width:300px" })
                                </td>
                                <td>
                                    <label>Bloquear Usuario</label>
                                    @Html.DropDownListFor(model => model.Blocked, new SelectList(ViewBag.estados, "Text", "Value"), new { @class = "form-control", Style = "width:300px" })
                                </td>
                            </tr>
                        </table>
                        <hr style="color: #8dd9f7">

                        <table>
                            <tr>
                                <td>
                                    <label>Shows </label>
                                    <select style="width:300px" multiple="multiple" class="form-control" id="shows">
                                        @foreach (var item in ViewBag.shows)
                                        {
                                            <option value="@item.UniqueId">@item._Show</option>
                                        }
                                    </select>
                                    <input type="button" value="Agregar" class="form-control" id="agregar" />
                                </td>
                                <td>
                                    <label>Shows Asignados</label>
                                    <select style="width:300px" multiple="multiple" class="form-control" id="showsAsignados" name="showsAsignados">
                                        @if (ViewBag.accion == "Put")
                                        {
                                            foreach (var item in Model.ShowsAsignados)
                                            {
                                                <option value="@item.UniqueId">@item._Show</option>
                                            }
                                        }
                                    </select>
                                    <input type="button" value="Borrar" class="form-control" id="borrar" />
                                </td>
                            </tr>
                        </table>
                        <hr style="color: #8dd9f7">

                        <input name="accion" class="hidden" value="@ViewBag.accion" data-form="error-box" />
                        <input id="_shows" name="_shows" class="hidden" />
                        <input name="copiarFacturacion" id="hiddenCopiarFacturacion" class="hidden" value="" data-form="error-box" />
                        <button id="btn_guardar" type="submit" class="btn btn-primary btn-block btn-submit-to-right">Guardar</button>
                    </form>
                </div>
            </div>
        }
        else
        {
            <label>@ViewBag.mensaje</label>
        }
    }

</div>

<script>

    var accion = "@ViewBag.accion";
    if (accion == "Put")
    {
        generateShowsHiddenList();
    }


    $("#userMaster").change(function (event) {
        var seleccion = $("#userMaster option:selected");
        if (seleccion.val() == "si")
        {
            $("#crearFechas").prop("disabled", true);
            $("#cargarBordereaux").prop("disabled", true);
            $("#cargaSalas").prop("disabled", true);
            $("#veBordereaux").prop("disabled", true);
        }
        else
        {
            $("#crearFechas").prop("disabled", false);
            $("#cargarBordereaux").prop("disabled", false);
            $("#cargaSalas").prop("disabled", false);
            $("#veBordereaux").prop("disabled", false);
        }

    });

    $("#agregar").click(function (event) {
        var seleccion = $("#shows option:selected");
        if (seleccion.val() == undefined)
            alert("Debe seleccionar un show");
        else
        {
            $("#showsAsignados").append('<option value="' + seleccion.val() + '">' + seleccion.html() + '</option>');
            $("#shows option[value='" + seleccion.val() + "']").remove();
            generateShowsHiddenList();
        }

    });

    $("#borrar").click(function (event) {
        var seleccion = $("#showsAsignados option:selected");
        if (seleccion.val() == undefined)
            alert("Debe seleccionar un show");
        else
        {
            $("#shows").append('<option value="' + seleccion.val() + '">' + seleccion.html() + '</option>');
            $("#showsAsignados option[value='" + seleccion.val() + "']").remove();
            generateShowsHiddenList();
        }
    });

    function generateShowsHiddenList()
    {
        var list = $("#showsAsignados");
        var i = 0;
        var _shows = "";
        while (list[0].children[i] != undefined) {
            if (_shows == "")
                _shows = list[0].children[i].value;
            else
                _shows = _shows + "-" + list[0].children[i].value;
            i++;
        }
        $("#_shows").val(_shows);
    }


</script>

