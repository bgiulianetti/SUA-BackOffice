
@{
    ViewBag.Title = "Index";
}

<div class="main-content">

    <div class="panel">

        <div class="panel-body" style="text-align:center; padding-left:130px; padding-right:130px; padding-top:10px; padding-bottom:60px">
            <div class="well well-sm text-center" style="width:90%;">
                <h4>Ganancias netas por show</h4>
                <input type="number" id="gananciasNetasPorShow_year" min="2017" max="2029" value="2018" />
                <input type="button" id="gananciasNetasPorShow" value="Ok" />
                <br /><br />
                <div id="gananciasNetasPorShowChart" style="height: 300px; width: 100%;"></div>
            </div>
        </div>

        <div class="panel-body" style="text-align:center; padding-left:130px; padding-right:130px; padding-top:10px; padding-bottom:60px">
            <div class="well well-sm text-center" style="width:90%">
                <h4>Ganancias netas por mes</h4>
                <input type="number" id="gananciasNetasPorMes_year" min="2017" max="2029" value="2018" />
                <input type="button" id="gananciasNetasPorMes" value="Ok" />
                <br /><br />
                <div id="gananciasNetasPorMesChart" style="height: 300px; width: 100%;"></div>
            </div>
        </div>

        <div class="panel-body" style="width:90%; padding-left:130px; padding-right:130px; padding-top:10px; padding-bottom:60px">
            <div class="well well-sm text-center">
                <h4>Ganancias brutas por mes</h4>
                <input type="number" id="gananciasBrutasPorMes_year" min="2017" max="2029" value="2019" />
                <input type="button" id="gananciasBrutasPorMes" value="Ok" />
                <br /><br />
                <div id="gananciasBrutasPorMesChart" style="height: 300px; width: 100%;"></div>
            </div>
        </div>

        <div class="panel-body" style="width:90%; padding-left:130px; padding-right:130px; padding-top:10px; padding-bottom:60px">
            <div class="well well-sm text-center">
                <h4>Ganancias netas por mes - Versus</h4>
                <input type="number" id="gananciasNetasPorMesVersus_yearA" min="2017" max="2029" value="2018" /> vs
                <input type="number" id="gananciasNetasPorMesVersus_yearB" min="2017" max="2029" value="2019" />
                <input type="button" id="gananciasNetasPorMesVersus" value="Ok" />
                <br /><br />
                <div id="gananciasNetasPorMesVersusChart" style="height: 300px; width: 100%;"></div>
            </div>
        </div>

    </div>
</div>

<script>


    $(document).ready(function () {

        //Ganancias Netas por mes
        var gananciasNetasPorMesDataPoints = [];
        var gananciasNetasPorMes = createGananciasNetasPorMes();
        updateGananciasNetasPorMes();
        $("#gananciasNetasPorMes").click(updateGananciasNetasPorMes);
        function addGananciasNetasPorMesData(data) {
            gananciasNetasPorMes.destroy();
            for (var i = 0; i < data.length; i++) {
                if (gananciasNetasPorMesDataPoints.length >= 12)
                    gananciasNetasPorMesDataPoints = [];

                gananciasNetasPorMesDataPoints.push({
                    label: data[i].label,
                    y: parseFloat(data[i].y)
                });
            }
            gananciasNetasPorMes = createGananciasNetasPorMes();
            gananciasNetasPorMes.render();
        }
        function updateGananciasNetasPorMes() {
            $.getJSON("estadisticas/GetGananciasNetasPorMes?year=" + $("#gananciasNetasPorMes_year").val(), addGananciasNetasPorMesData);
        }
        function createGananciasNetasPorMes() {
            return new CanvasJS.Chart("gananciasNetasPorMesChart", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                axisY: {
                    title: " $",
                    titleFontSize: 24
                },
                data: [{
                    type: "spline",
                    yValueFormatString: "#,### $",
                    dataPoints: gananciasNetasPorMesDataPoints
                }]
            });
        }


        //Ganancias Brutas por mes
        var gananciasBrutasPorMesDataPoints = [];
        var gananciasBrutasPorMes = createGananciasBrutasPorMes();
        updateGananciasBrutasPorMes();
        $("#gananciasBrutasPorMes").click(updateGananciasBrutasPorMes);
        function addGananciasBrutasPorMesData(data) {
            gananciasBrutasPorMes.destroy();
            for (var i = 0; i < data.length; i++) {
                if (gananciasBrutasPorMesDataPoints.length >= 12)
                    gananciasBrutasPorMesDataPoints = [];

                gananciasBrutasPorMesDataPoints.push({
                    label: data[i].label,
                    y: parseFloat(data[i].y)
                });
            }
            gananciasBrutasPorMes = createGananciasBrutasPorMes();
            gananciasBrutasPorMes.render();
        }
        function updateGananciasBrutasPorMes() {
            $.getJSON("estadisticas/GetGananciasBrutasPorMes?year=" + $("#gananciasBrutasPorMes_year").val(), addGananciasBrutasPorMesData);
        }
        function createGananciasBrutasPorMes() {
            return new CanvasJS.Chart("gananciasBrutasPorMesChart", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                axisY: {
                    title: " $",
                    titleFontSize: 24
                },
                data: [{
                    type: "spline",
                    yValueFormatString: "#,### $",
                    dataPoints: gananciasBrutasPorMesDataPoints
                }]
            });
        }


        //Ganancias Netas por mes Versus
        var gananciasNetasPorMesVersusDataPointsA = [];
        var gananciasNetasPorMesVersusDataPointsB = [];
        var gananciasNetasPorMesVersus = createGananciasNetasPorMesVersus();
        updateGananciasNetasPorMesVersus();
        $("#gananciasNetasPorMesVersus").click(updateGananciasNetasPorMesVersus);
        function addGananciasNetasPorMesVersusData(data) {
            gananciasNetasPorMesVersus.destroy();

            //Year A
            for (var i = 0; i < data[0].length; i++) {
                if (gananciasNetasPorMesVersusDataPointsA.length >= 12)
                    gananciasNetasPorMesVersusDataPointsA = [];

                gananciasNetasPorMesVersusDataPointsA.push({
                    label: data[0][i].label,
                    y: parseFloat(data[0][i].y)
                });
            }



            //Year B
            for (var i = 0; i < data[1].length; i++) {
                if (gananciasNetasPorMesVersusDataPointsB.length >= 12)
                    gananciasNetasPorMesVersusDataPointsB = [];

                gananciasNetasPorMesVersusDataPointsB.push({
                    label: data[1][i].label,
                    y: parseFloat(data[1][i].y)
                });
            }



            gananciasNetasPorMesVersus = createGananciasNetasPorMesVersus();
            gananciasNetasPorMesVersus.render();
        }
        function updateGananciasNetasPorMesVersus() {
            $.getJSON("estadisticas/GetGananciasNetasPorMesVersus?yearA=" + $("#gananciasNetasPorMesVersus_yearA").val() + "&yearB=" + $("#gananciasNetasPorMesVersus_yearB").val(), addGananciasNetasPorMesVersusData);
        }
        function createGananciasNetasPorMesVersus() {
            return new CanvasJS.Chart("gananciasNetasPorMesVersusChart", {
                toolTip: {
                    shared: true
                },
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                axisY: {
                    title: " $",
                    titleFontSize: 24
                },
                data: [{
                    type: "spline",
                    name: $("#gananciasNetasPorMesVersus_yearA").val(),
                    yValueFormatString: "#,### $",
                    showInLegend: true,
                    dataPoints: gananciasNetasPorMesVersusDataPointsA
                },
                {
                    type: "spline",
                    name: $("#gananciasNetasPorMesVersus_yearB").val(),
                    yValueFormatString: "#,### $",
                    showInLegend: true,
                    dataPoints: gananciasNetasPorMesVersusDataPointsB
                }]
            });
        }



        //Ganancias Netas por show
        var gananciasNetasPorShowDataPoints = [];
        var gananciasNetasPorShow = createGananciasNetasPorShow();
        updateGananciasNetasPorShow();
        $("#gananciasNetasPorShow").click(updateGananciasNetasPorShow);
        function addGananciasNetasPorShowData(data) {
            gananciasNetasPorShow.destroy();

            //gananciasNetasPorShowDataPoints = [];
            gananciasNetasPorShowDataPoints = data;

            gananciasNetasPorShow = createGananciasNetasPorShow();
            gananciasNetasPorShow.render();
        }
        function updateGananciasNetasPorShow() {
            $.getJSON("estadisticas/GetGananciasNetasPorShow?year=" + $("#gananciasNetasPorShow_year").val(), addGananciasNetasPorShowData);
        }
        function createGananciasNetasPorShow() {
            return new CanvasJS.Chart("gananciasNetasPorShowChart", {
                animationEnabled: true,
                theme: "light2",
                exportEnabled: true,
                data: [{
                    type: "pie",
                    yValueFormatString: "#,###",
                    startAngle: 25,
                    toolTipContent: "<b>{label}</b>: ${y}",
                    showInLegend: "true",
                    legendText: "{label}",
                    indexLabelFontSize: 16,
                    indexLabel: "{label} - ${y}",
                    dataPoints: gananciasNetasPorShowDataPoints
                }]
            });
        }


    });




</script>